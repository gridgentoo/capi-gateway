#
# Licensed to the Apache Software Foundation (ASF) under one or more
#     contributor license agreements.  See the NOTICE file distributed with
#     this work for additional information regarding copyright ownership.
#     The ASF licenses this file to You under the Apache License, Version 2.0
#     (the "License"); you may not use this file except in compliance with
#     the License.  You may obtain a copy of the License at
#          http://www.apache.org/licenses/LICENSE-2.0
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.
#

camel.springboot.name=CAPI Gateway
spring.banner.location=classpath:capi.txt
server.port=8380

management.endpoints.web.base-path=/analytics/
management.endpoints.web.exposure.include=*
management.security.enabled=false

hawtio.authenticationEnabled=false

api.health.check.context=/analytics/health
api.deployed.routes.context=/analytics/camelroutes

management.endpoint.camelroutes.enabled=true
management.endpoint.camelroutes.read-only=true
camel.springboot.jmx-enabled=true

spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.username=capi
spring.data.mongodb.password=
spring.data.mongodb.database=capi

server.ssl.enabled=true
server.ssl.key-store-type=PKCS12
server.ssl.key-store=
server.ssl.key-store-password=capigateway
server.ssl.key-alias=capigateway

token.provider.key-alias=capigateway
token.provider.key-store-password=
token.provider.key-store=

server.ssl.trust-store=
server.ssl.trust-store-password=capigateway

camel.component.metrics.enabled=true
camel.component.servlet.mapping.context-path=/gateway/*

api.gateway.api.running.inspector.period=30000
api.gateway.api.throttling.inspector.period=2000
api.gateway.traffic.inspector.enabled=true
api.gateway.traffic.inspector.kafka.topic=capi-traffic-inspector
api.gateway.traffic.inspector.kafka.groupId=capiGroup
api.gateway.traffic.inspector.kafka.broker=kafka:9092

api.gateway.error.endpoint=localhost:8380/capi-error
api.gateway.zipkin.endpoint=http://localhost:9411/api/v2/spans

api.gateway.grafana.endpoint=http://localhost:3000/api/dashboards/db
api.gateway.grafana.create.dashboard=true
api.gateway.grafana.user=admin
api.gateway.grafana.password=
api.gateway.grafana.token=
api.gateway.grafana.basic.auth=true
api.gateway.grafana.datasource=Prometheus
api.gateway.prometheus.endpoint=http://localhost:9090

capi.authorization.keys.endpoint=https://localhost:8443/auth/realms/capi/protocol/openid-connect/certs

camel.component.kafka.configuration.ssl-truststore-location=/Users/rodrigo/projects/capi-docker/keys/truststore.jks
camel.component.kafka.configuration.ssl-truststore-password=
camel.component.kafka.configuration.ssl-truststore-type=JKS
camel.component.kafka.configuration.ssl-keystore-location=/Users/rodrigo/projects/capi-docker/keys/capi.p12
camel.component.kafka.configuration.ssl-keystore-password=
camel.component.kafka.configuration.ssl-keystore-type=PKCS12

api.gateway.cors.filter.context=/gateway
api.gateway.manager.origin=http://localhost:4200

gateway.environment=dev
gateway.cache.zookeeper.discovery=true
gateway.cache.zookeeper.host=localhost:2181
gateway.cache.zookeeper.path=/discovery/hazelcast
gateway.cache.zookeeper.group.key=capi